import React, { useState } from 'react';
import { Container } from '@mui/system';
import { Button, TextField } from '@mui/material';
import { useParams, useNavigate } from 'react-router';
import '../css/index.css'
import { useEffect } from 'react';

export default function ApplyJobForm(){

	const {jobID} = useParams()
	const navigate = useNavigate()
	//const [referred, setReferred] = useState("N/A")

	// appID : "",	- this should be autogenerated in the backend, inside the db as auto primary key 
	const [application, setApplication] = useState({
		jobID : jobID,
		name : "",
		experience : "",	
		currentOrg : "",
		currentTitle : "",
		status : "Applied",
		cvLink : "",
		email : "",
		university : ""
	})

	
	const handleChange = (e)=>{
		
		setApplication(oldApplication => {
			const {name, value} = e.target
			return({
				...oldApplication,
				[name] : value
			})
		})
	}

	const handleSubmit = async(e)=>{
		e.preventDefault()
		
		await fetch('https://mn3avl.deta.dev/applications/apply', {
			method: 'POST',
			mode :'cors',
        	headers: { 'Content-Type': 'application/json' },
        	body: JSON.stringify({ 
				'name' : application.name,
				'experience' : application.experience,
				'job_id' : application.jobID,
				'current_org' : application.currentOrg,
				'current_title' : application.currentTitle,
				'university' : application.university,
				'cv' : application.cvLink,
				'status' : application.status,
				'email' : application.email
			})
		})	
		.then(() => {
			setApplication({
				jobID : jobID,
				name : "",
				experience : "",	
				currentOrg : "",
				currentTitle : "",
				status : "Applied",
				cvLink : "",
				email : "",
				university : ""
			})
		})
		.then(() => {navigate('/')})


		// a snackbar on submitting successfully
	}

	return(
		<Container maxWidth="lg">
			<h1>Apply Job</h1>
			<br/>
			<TextField
				label = "Name"
				variant='outlined'
				fullWidth
				required
				value={application.name}
				name="name"
				onChange = {handleChange}
			/>	
			<br/><br/>
			<TextField
				label = "Email"
				variant='outlined'
				fullWidth
				required
				value={application.email}
				name="email"
				onChange = {handleChange}
			/>	
			<br/><br/>

			<TextField
				label = "Current Title"
				variant='outlined'
				fullWidth
				required
				value={application.currentTitle}
				name="currentTitle"
				onChange = {handleChange}
				helperText = "Enter N/A, if not applicable"
			/>
			<br/><br/>
			<TextField
				label = "Current Organization"
				variant='outlined'
				fullWidth
				required
				value={application.currentOrg}
				name="currentOrg"
				onChange = {handleChange}
				helperText = "Enter N/A, if not applicable"
			/>
			<br/><br/>
			<TextField
				label = "Experience"
				variant='outlined'
				fullWidth
				required
				value={application.experience}
				name="experience"
				onChange = {handleChange}
				helperText = "years"
			/>
			<br/><br/>
			
			<TextField
				label = "University"
				variant='outlined'
				fullWidth
				required
				value={application.university}
				name="university"
				onChange = {handleChange}
			/>	
			<br/><br/>

			<TextField
				label = "CV"
				variant='outlined'
				fullWidth
				required
				value={application.cvLink}
				name="cvLink"
				onChange = {handleChange}
				helperText = "Enter a global google drive link"
			/>
			<br/><br/>

			{
				application.name && application.currentOrg && application.currentTitle && application.experience && application.cvLink && application.university && application.email 
				? <Button 
					variant="contained" 
					type='submit' 
					fullWidth 
					size="large" 
					onClick={handleSubmit} 
				  >
						SUBMIT
					</Button>
				: <Button 
					variant="contained" 
					type='submit' 
					fullWidth 
					size="large" 
					disabled  
				 >
						SUBMIT
					</Button>
			}
			

			
		 	

		</Container>
	)
}

